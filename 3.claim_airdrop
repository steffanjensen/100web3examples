import os
import time
from web3 import Web3

# Connect to the Ethereum network
w3 = Web3(Web3.HTTPProvider("https://mainnet.infura.io/v3/YOUR_INFURA_API_KEY"))

# Set the private key of the wallet that will claim the airdrop
PRIVATE_KEY = os.environ.get("PRIVATE_KEY")

# Set the address of the wallet that will claim the airdrop
wallet_address = w3.eth.account.privateKeyToAccount(PRIVATE_KEY).address

# Set the address of the airdrop contract
airdrop_contract_address = "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"

# Get the abi of the airdrop contract
airdrop_contract_abi = requests.get("https://raw.githubusercontent.com/airdrop_contract/abi.json").json()

# Create the contract object
contract = w3.eth.contract(address=airdrop_contract_address, abi=airdrop_contract_abi)

# Define the function to check if the airdrop is available
def check_airdrop():
    is_available = contract.functions.isAirdropAvailable().call()
    if is_available:
        print("Airdrop is available")
        return True
    else:
        print("Airdrop is not available")
        return False

# Define the function to claim the airdrop
def claim_airdrop():
    # Get the nonce of the wallet address
    nonce = w3.eth.getTransactionCount(wallet_address)
    # Define the transaction details
    transaction = contract.functions.claimAirdrop().buildTransaction({
        'gas': 100000,
        'gasPrice': w3.toWei('20', 'gwei'),
        'nonce': nonce,
    })
    # Sign the transaction
    signed_txn = w3.eth.account.signTransaction(transaction, private_key=PRIVATE_KEY)
    # Send the transaction
    txn_hash = w3.eth.sendRawTransaction(signed_txn.rawTransaction)
    # Wait for the transaction to be mined
    txn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)
    # Print the transaction receipt
    print("Transaction receipt: ", txn_receipt)

# Define the function to check and claim the airdrop
def check_and_claim_airdrop():
    if check_airdrop():
        claim_airdrop()

# Set the interval for checking and claiming the airdrop (in seconds)
interval = 3600

while True:
    check_and_claim_airdrop()
    time.sleep(interval)
